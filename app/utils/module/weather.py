from typing import Optional

from pyowm import OWM
from pyowm.utils.config import get_default_config

from decorator.cache import cache


class Weather:
    __emoji_weather = {'–ø–∞—Å–º—É—Ä–Ω–æ': '‚òÅ',
                       '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏': 'üå•',
                       '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': '‚õÖ',
                       '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': 'üå§',
                       '—è—Å–Ω–æ': '‚òÄ',
                       '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å': 'üåß',
                       '–¥–æ–∂–¥—å': 'üåß',
                       '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å': 'üåß',
                       '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥': 'üå®',
                       '–≥—Ä–æ–∑–∞': 'üå©',
                       '—Ç—É–º–∞–Ω': 'üå´'
                       }

    def __init__(self, token: Optional[str], city: Optional[str], language: Optional[str] = 'en'):
        self.__token = token
        self.__city = city
        self.__language = language

    @property
    def language(self):
        """Get-er"""
        return self.__language

    @language.setter
    def language(self, language: Optional[str]):
        if not isinstance(language, str):
            raise ValueError("–ó–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —Ç–∏–ø—É str")

        self.__language = language

    @property
    def city(self):
        """Get-er"""
        return self.__language

    @city.setter
    def city(self, city: Optional[str]):
        if not isinstance(city, str):
            raise ValueError("–ó–Ω–∞—á–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —Ç–∏–ø—É str")
        self.__city = city

    def __get_weather(self, language: Optional[str] = None):
        config_dict = get_default_config()
        if language:
            config_dict['language'] = language
        else:
            config_dict['language'] = self.language
        owm = OWM(self.__token, config_dict)
        mgr = owm.weather_manager()
        observation = mgr.weather_at_place(self.__city)
        return observation.weather

    @cache(60*5)
    def get_detailed_status(self, emoji: Optional[bool] = None) -> Optional[str]:
        """
            –í–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç—É—Å –ø–æ–≥–æ–¥–∏

        Args:
            emoji: If True - return emoji

        Returns:

        """

        if emoji:
            detailed_status = self.__get_weather('ru').detailed_status
            return self.__emoji_weather.get(detailed_status)

        return self.__get_weather().detailed_status
