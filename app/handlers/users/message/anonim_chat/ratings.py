from aiogram import types
from aiogram.filters import StateFilter, Text
from aiogram.fsm.context import FSMContext

from keyboards.default import AnonymousChatKb
from routers.private_chat.private_chat import router
from states import AnonymousChatStates
from utils.mysql import AnonimChat


@router.message(
    Text(text=AnonymousChatKb.ranked_btn),
    StateFilter(AnonymousChatStates.main_menu)
)
async def get_inl_kb_with_setting(message: types.Message, state: FSMContext):
    """–û—Ç—Ä–∏–º—É—î–º–æ –∫–Ω–æ–ø–∫—É —ñ–∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏"""
    message_text = "–†–µ–π—Ç–∏–Ω–≥ –Ω–∞–π–∞–∫—Ç–∏–≤–Ω—ñ—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ –∞–Ω–æ–Ω—ñ–º–Ω–æ–º—É —á–∞—Ç –±–æ—Ç—ñ\n" \
                   "–û—á–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –æ—Ç—Ä–∏–º—É—é—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤ –±–æ—Ç—ñ üòé {0}"

    information_of_users = AnonimChat().get_all_info_for_top_rating_users()
    if information_of_users:
        keys, info_user_list = information_of_users
        table_rating = ''
        template = '{0} –º—ñ—Å—Ü–µ - {1} - {2} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å\n'
        number = 0
        for user in info_user_list:
            number += 1
            username, count_message, show_username = user
            if show_username and not username is None:
                table_rating += template.format(number, '@' + username, count_message)
                continue
            table_rating += template.format(number, 'ü§´', count_message)

        await message.answer(text=message_text.format('\n\n' + table_rating))
        return

    await message.answer(text=message_text.format('\n\n–ù–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç, —Ç—É—Ç –Ω—ñ–∫–æ–≥–æ –Ω–µ–º–∞—î'))
