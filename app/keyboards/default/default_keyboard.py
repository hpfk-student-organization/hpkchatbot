from typing import Optional

from aiogram.types import ReplyKeyboardMarkup
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from utils.module.keyboard import zip_adjust, zip_builder
from utils.mysql import QuotesTeacher


def _reply_keyboard_builder(text_btn_args: Optional[tuple | list],
                            adjust: Optional[tuple] = None) -> ReplyKeyboardMarkup | ReplyKeyboardBuilder:
    """basic builder"""
    return zip_builder(
        text_btn_args=text_btn_args,
        builder=ReplyKeyboardBuilder(),
        adjust=adjust
    )


class BaseButton:
    back_btn = 'üè† –ù–∞–∑–∞–¥'
    settings_btn = '‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'
    send_btn = 'üè† –ù–∞–¥—ñ—Å–ª–∞—Ç–∏'

    @staticmethod
    def _back() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ back"""
        _ = BaseButton

        tuple_btn = _.back_btn,

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)


class MainMenuKb:
    """–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é, —è–∫–µ –∑'—è–≤–ª—è—î—Ç—å—Å—è –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö –±–æ—Ç–∞"""

    lessons_btn = 'üìñ –ü–∞—Ä–∏'
    for_students_btn = 'üßë‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–∞–º'
    anonymous_chat_btn = 'üí¨ –ê–Ω–æ–Ω—ñ–º–Ω–∏–π —á–∞—Ç'
    ads_btn = 'üìã –û–≥–æ–ª–æ—à–µ–Ω–Ω—è'
    quotes_btn = 'üí¨ –¶–∏—Ç–∞—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤'

    menu_btn = 'üìú –ú–µ–Ω—é'
    good_btn = 'üëå –ó—Ä–æ–∑—É–º—ñ–ª–æ'

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        _ = MainMenuKb

        tuple_btn = _.lessons_btn, _.for_students_btn, _.ads_btn, _.anonymous_chat_btn, _.quotes_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(2)
        ).as_markup(resize_keyboard=True)


class LessonsKb(BaseButton):
    """–ú–µ–Ω—é 2-–≥–æ —Ä—ñ–≤–Ω—è –ü–∞—Ä–∏"""
    replacements_btn = 'üìÑ –ó–∞–º—ñ–Ω–∏'
    timetable_btn = 'üìó –†–æ–∑–∫–ª–∞–¥'
    hours_lessons_btn = 'üïì –ì–æ–¥–∏–Ω–∏ –∑–∞–Ω—è—Ç—å'

    send_new_replacements_btn = '‚ûï –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤—ñ –∑–∞–º—ñ–Ω–∏'
    send_anonim_replacements_btn = '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∞–Ω–æ–Ω—ñ–º–Ω–æ'
    send_replacements_with_username_btn = '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ —Å–µ–±–µ'

    how_get_replacements_btn = 'üóû –Ø–∫ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∑–∞–º—ñ–Ω–∏?'
    my_group_timetable_btn = 'üë• –ú–æ—è –≥—Ä—É–ø–∞'

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        _ = LessonsKb

        tuple_btn = _.replacements_btn, _.timetable_btn, _.hours_lessons_btn, _.settings_btn, _.send_new_replacements_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(2, 2, 1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def settings(name_group: Optional[str]) -> ReplyKeyboardMarkup:
        _ = LessonsKb

        tuple_btn = _.how_get_replacements_btn, '{0} {1}'.format(_.my_group_timetable_btn, name_group), _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(2, 1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def back() -> ReplyKeyboardMarkup:
        return QuotesTeacherKb._back()

    @staticmethod
    def send_replacements() -> ReplyKeyboardMarkup:
        _ = LessonsKb

        tuple_btn = _.send_anonim_replacements_btn, _.send_replacements_with_username_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)


class ForStudentsKb(BaseButton):
    """–ú–µ–Ω—é 2-–≥–æ —Ä—ñ–≤–Ω—è –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤"""

    search_teacher_btn = 'üïµÔ∏è –î–µ –≤–∏–∫–ª–∞–¥–∞—á?'

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        _ = ForStudentsKb

        tuple_btn = _.search_teacher_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)


class QuotesTeacherKb(BaseButton):
    """–ú–µ–Ω—é 2-–≥–æ —Ä—ñ–≤–Ω—è –¶–∏—Ç–∞—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤"""

    send_quotes_btn = '‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Ü–∏—Ç–∞—Ç—É'
    next_btn = '‚ñ∂'
    last_btn = '‚óÄ'
    repeat_btn = 'üí¨ –©–µ –æ–¥–Ω–∞'

    @staticmethod
    def __convert_amount_list_btn_to_tuple(len_tuple_btn: Optional[int]) -> tuple:
        amount_btn_in_structure_tuple = *(1 + bool(len_tuple_btn - 1),) * (
                len_tuple_btn // 2 + 0 ** (len_tuple_btn - 1)
        ), len_tuple_btn % 2 - 0 ** (len_tuple_btn - 1)

        return amount_btn_in_structure_tuple

    @staticmethod
    def main_menu(
            list_all_teachers: Optional[list],
            number_page: Optional[int] = 1,
            amount_teacher_btn_on_page: Optional[int] = 4) -> ReplyKeyboardMarkup:
        """
            Keyboard for page with quotes

        Args:
            list_all_teachers:
            amount_teacher_btn_on_page: the number of btn with teachers that will be displayed in the menu with the
            choice of teacher
            number_page: the number page in quotes

        Returns: Keyboard with button teacher

        """

        _ = QuotesTeacherKb

        first_index = 0 + amount_teacher_btn_on_page * (number_page - 1)  # —Ñ–æ—Ä–º—É–ª–∞ –æ–±—Ä–∞—Ö—É–Ω–∫—É —ñ–Ω–¥–µ–∫—Å—É –ø–æ –ª—ñ–≤—ñ–π –º–µ–∂—ñ
        last_index = amount_teacher_btn_on_page - 1 + amount_teacher_btn_on_page * (number_page - 1)  # –ø–æ –ø—Ä–∞–≤—ñ–π –º–µ–∂—ñ

        teacher_btn = [list_all_teachers[index_item] for index_item in range(len(list_all_teachers)) if
                       first_index <= index_item <= last_index]  # –≤–∏–∑–Ω–∞—á–∏–º–æ –∫–Ω–æ–ø–∫–∏, —è–∫—ñ–π –ø–æ–ø–∞–¥–∞—é—Ç—å –ø—ñ–¥ –≤–∫–∞–∑–∞–Ω—É –º–µ–∂—É

        # get emoji of teacher
        teacher_with_emoji_btn = [
            _teacher_text if _emoji is None else '{0} {1}'.format(_emoji, _teacher_text)
            for _teacher_text, _emoji in QuotesTeacher().select_emoji_of_teacher(list_teachers=teacher_btn)
        ]

        # –∑–±–µ—Ä–µ–º–æ –¥–æ –∫—É–ø–∏ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏
        tuple_zip_btn = *teacher_with_emoji_btn, _.send_quotes_btn, _.last_btn, _.back_btn, _.next_btn

        return _reply_keyboard_builder(  # –¥–æ—Ä–æ–±–∏—Ç–∏ —Ñ–æ—Ä–º—É–ª—É, —â–æ–± –≤–æ–Ω–æ –ø—Ä–∞—Ü—é–≤–∞–ª–æ –ø—Ä–∏ –±—É–¥—å-—è–∫–∏—Ö —Ä–æ–∑–º—ñ—Ä–∞—Ö
            tuple_zip_btn, adjust=zip_adjust(
                *_.__convert_amount_list_btn_to_tuple(len(teacher_btn)),
                1, 3)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def quotes() -> ReplyKeyboardMarkup:
        """–ö–æ–ª–∏ –º–∏ –ø–µ—Ä–µ–≥–ª—è–¥–∞—î–º–æ —Ü–∏—Ç–∞—Ç–∏ –≤–∏–∫–ª–∞–¥–∞—á–∞"""
        _ = QuotesTeacherKb

        tuple_btn = _.repeat_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def back() -> ReplyKeyboardMarkup:
        return QuotesTeacherKb._back()

    @staticmethod
    def send_quotes() -> ReplyKeyboardMarkup:
        """–ö–æ–ª–∏ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ —Ü–∏—Ç–∞—Ç—É"""
        _ = QuotesTeacherKb

        tuple_btn = _.send_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1, repeat=True)
        ).as_markup(resize_keyboard=True)


class AnonymousChatKb(BaseButton):
    """–ú–µ–Ω—é 2-–≥–æ —Ä—ñ–≤–Ω—è –ê–Ω–æ–Ω—ñ–º–Ω–∏–π —á–∞—Ç"""
    start_search_btn = 'üîç –ü–æ—á–∞—Ç–∏ –ø–æ—à—É–∫'
    ranked_btn = '‚≠ê –†–µ–π—Ç–∏–Ω–≥'
    settings_who_am_i_btn = 'üî≠ –•—Ç–æ —è?'
    it_is_me_btn = 'ü§´ –¶–µ —è'

    who_online_btn = 'üåê –•—Ç–æ –æ–Ω–ª–∞–π–Ω?'
    cancel_search_btn = 'üö´ –°–∫–∞—Å—É–≤–∞—Ç–∏ –ø–æ—à—É–∫'

    leave_chat_btn = 'üö´ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —á–∞—Ç'
    hide_keyboard_btn = '‚å®Ô∏è –°—Ö–æ–≤–∞—Ç–∏ –º–µ–Ω—é'

    exit_chat_btn = 'üö™ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ç–∞ –≤–∏–π—Ç–∏'
    back_in_chat_btn = 'üôÉ –ù—ñ, —è –ø–µ—Ä–µ–¥—É–º–∞–≤'

    search_again_btn = 'üîç –®—É–∫–∞—Ç–∏ –∑–Ω–æ–≤—É'
    main_menu_btn = 'üè† –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é'

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        _ = AnonymousChatKb

        tuple_btn = _.start_search_btn, _.ranked_btn, _.settings_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(2, 1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def settings() -> ReplyKeyboardMarkup:
        _ = AnonymousChatKb

        tuple_btn = _.settings_who_am_i_btn, _.it_is_me_btn, _.back_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(2, 1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def search() -> ReplyKeyboardMarkup:
        _ = AnonymousChatKb

        tuple_btn = _.who_online_btn, _.cancel_search_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def kb_in_chat() -> ReplyKeyboardMarkup:
        """–ó'—è–≤–ª—è—î—Ç—å—Å—è –ø—Ä–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ –∑ 2-—Ö —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫—ñ–≤ –º—ñ–∂ —Å–æ–±–æ—é"""
        _ = AnonymousChatKb

        tuple_btn = _.leave_chat_btn, _.hide_keyboard_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def exit_chat() -> ReplyKeyboardMarkup:
        """–ó–∞–ø–∏—Ç—É—î —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–µ –ø–æ–∫–∏–Ω—É—Ç–∏ —á–∞—Ç"""
        _ = AnonymousChatKb

        tuple_btn = _.exit_chat_btn, _.back_in_chat_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)

    @staticmethod
    def search_or_exit_in_menu() -> ReplyKeyboardMarkup:
        """–ó–∞–ø–∏—Ç—É—î —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —à—É–∫–∞—Ç–∏ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫–∞ —á–∏ –ø–æ–∫–∏–Ω—É—Ç–∏ —á–∞—Ç"""
        _ = AnonymousChatKb

        tuple_btn = _.search_again_btn, _.main_menu_btn

        return _reply_keyboard_builder(
            tuple_btn, adjust=zip_adjust(1)
        ).as_markup(resize_keyboard=True)
